// <auto-generated />
using System;
using GrowthDiary.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GrowthDiary.Migrations
{
    [DbContext(typeof(GrowthDiaryContext))]
    [Migration("20201229105516_Like")]
    partial class Like
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10");

            modelBuilder.Entity("GrowthDiary.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TEXT");

                    b.Property<int?>("InReplyToId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastModifiedTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("Like")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("InReplyToId");

                    b.ToTable("Post");
                });

            modelBuilder.Entity("GrowthDiary.Models.PostImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Index")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PostId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.ToTable("PostImage");
                });

            modelBuilder.Entity("GrowthDiary.Models.Post", b =>
                {
                    b.HasOne("GrowthDiary.Models.Post", "InReplyTo")
                        .WithMany("Replies")
                        .HasForeignKey("InReplyToId");
                });

            modelBuilder.Entity("GrowthDiary.Models.PostImage", b =>
                {
                    b.HasOne("GrowthDiary.Models.Post", null)
                        .WithMany("Images")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
